if {![namespace exists ::IMEX]} { namespace eval ::IMEX {} }
set ::IMEX::dataVar [file dirname [file normalize [info script]]]
set ::IMEX::libVar ${::IMEX::dataVar}/libs

catch { setDesignMode -process 45 }
catch { setAnalysisMode -analysisType onChipVariation }
catch { setAnalysisMode -checkType setup }
catch { setAnalysisMode -clkSrcPath true }
catch { setAnalysisMode -clockPropagation sdcControl }
catch { setAnalysisMode -cppr both }
catch { setAnalysisMode -skew true }
catch { setAnalysisMode -usefulSkew true }
catch { setOptMode -activeHoldViews { func_fast_min } }
catch { setOptMode -activeSetupViews { func_slow_max } }
catch { setOptMode -autoHoldViews { func_fast_min} }
catch { setOptMode -autoSetupViews { func_slow_max} }
catch { setOptMode -autoTDGRSetupViews { func_slow_max} }
catch { setOptMode -autoViewHoldTargetSlack 0 }
catch { setOptMode -deleteInst true }
catch { setOptMode -drcMargin 0 }
catch { setOptMode -fixDrc true }
catch { setOptMode -optimizeFF true }
catch { setOptMode -preserveAllSequential false }
catch { setOptMode -setupTargetSlack 0 }
catch { setExtractRCMode  -effortLevel medium -engine postRoute -total_c_th 0 -relative_c_th 1 -coupling_c_th 0.1 }
catch {setNanoRouteMode -quiet -drouteAntennaFactor 1.000000}
catch {setNanoRouteMode -quiet -droutePostRouteSpreadWire "auto"}
catch {setNanoRouteMode -quiet -drouteStartIteration 0}
catch {setNanoRouteMode -quiet -drouteUseLefPinTaperRule true}
catch {setNanoRouteMode -quiet -extractDesignSignature 43730156}
catch {setNanoRouteMode -quiet -extractRcModelFile "${::IMEX::libVar}/misc/rc_model.bin"}
catch {setNanoRouteMode -quiet -extractThirdPartyCompatible false}
catch {setNanoRouteMode -quiet -grouteExpTdStdDelay 22.700000}
catch {setNanoRouteMode -quiet -grouteExpTdUseTifTimingEngineForImportDesign false}
catch {setNanoRouteMode -quiet -routeWithSiPostRouteFix false}
catch {setNanoRouteMode -quiet -timingEngine ".timing_file_29297.tif.gz"}

catch { setIlmMode -keepHighFanoutPorts true -keepLoopBack false -keepInstInSdc false -keepFlatten true }
catch { setActiveLogicViewMode -keepHighFanoutCriticalInsts false }
catch { setUsefulSkewMode -ecoRoute false }
catch { setSrouteMode -viaConnectToShape stripe }
catch { setDelayCalMode -enable_high_fanout true }
catch { setDelayCalMode -engine aae }
catch { setDelayCalMode -ignoreNetLoad false }
catch { setDelayCalMode -SIAware true }
catch { setDelayCalMode -socv_accuracy_mode low }
catch { setHierMode -disableArt false }
catch { setHierMode -reportPostRouteArtTiming false }
catch { setHierMode -trialRouteHonorReadOnly false }
catch { setImportMode -config true }
catch { setImportMode -discardFloatingVNets false }
catch { setImportMode -keepEmptyModule true }
catch { setSIMode -separate_delta_delay_on_data true }
catch { setSIMode -si_reselection slack }
catch { setRouteMode -earlyGlobalRouteSecondPG false }
catch { setFPlanMode -defaultTechSite CoreSite }
catch { setFPlanMode -maxIoHeight false }
catch { setFPlanMode -powerRailLayer {} }
