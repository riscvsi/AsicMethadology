###############################################################
#  Generated by:      Cadence Innovus 21.10-p004_1
#  OS:                Linux x86_64(Host ID localhost.localdomain)
#  Generated on:      Fri Feb  3 11:36:25 2023
#  Design:            uart
#  Command:           create_clock_tree_spec -out_file ccopt_cui.spec
###############################################################
#-------------------------------------------------------------------------------
# Clock tree setup script - dialect: Common UI
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------

if { [get_db clock_trees] != {} } {
  error {Cannot run clock tree spec: clock trees are already defined.}
}

namespace eval ::ccopt {}
namespace eval ::ccopt::ilm {}
set ::ccopt::ilm::ccoptSpecRestoreData {}
# Start by checking for unflattened ILMs.
# Will flatten if so and then check the db sync.
if { [catch {ccopt_check_and_flatten_ilms_no_restore}] } {
  return -code error
}
# cache the value of the restore command output by the ILM flattening code
set ::ccopt::ilm::ccoptSpecRestoreData $::ccopt::ilm::ccoptRestoreILMState

# The following pins are clock sources
set_db port:sys_clk .cts_is_sdc_clock_root true

# Clocks present at pin sys_clk
#   clk (period 8.000ns) in timing_config functional_func_slow_max([/dev/null])
create_clock_tree -name clk -source sys_clk -no_skew_group
# Clock period setting for source pin of clk
set_db port:sys_clk .cts_clock_period 8

##############################################################################
##
## Timing connectivity based skew groups: off
##
##############################################################################
set_db cts_timing_connectivity_info {}

# Skew group to balance non generated clock:clk in timing_config:functional_func_slow_max (sdc /dev/null)
create_skew_group -name clk/functional_func_slow_max -sources sys_clk -auto_sinks
set_db skew_group:clk/functional_func_slow_max .cts_skew_group_include_source_latency true
set_db skew_group:clk/functional_func_slow_max .cts_skew_group_created_from_clock clk
set_db skew_group:clk/functional_func_slow_max .cts_skew_group_created_from_constraint_mode functional_func_slow_max
set_db skew_group:clk/functional_func_slow_max .cts_skew_group_created_from_delay_corners {slow_max fast_min}


check_clock_tree_convergence
# Restore the ILM status if possible
if { [get_db ccopt_auto_design_state_for_ilms] == 0 } {
  if {$::ccopt::ilm::ccoptSpecRestoreData != {} } {
    eval $::ccopt::ilm::ccoptSpecRestoreData
  }
}

